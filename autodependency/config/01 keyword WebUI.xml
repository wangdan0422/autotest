<?xml version="1.0" encoding="UTF-8"?>
<root ver="1.0">
	
<group name='页面关键字'>
	<group name='浏览器操作'>
		<keyword id='web_browser_open'>
			<name>浏览器打开</name>
			<comment>根据输入的URL地址打开浏览器</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserOpen</implement>
			<show>1</show>
			<param id='alias'>
				<name>浏览器别名</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment>用于区分打开的多个浏览器，在多浏览器并发操作时需要设置，若仅需打开一个浏览器，别名可不输入</comment>
			</param>
			<param id='url'>
				<name>网址</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待打开的URL地址</comment>
			</param>
			<param id='type'>
				<name>浏览器类型</name>
				<default>Firefox</default>
				<values>Firefox\r\nIE\r\nChrome</values>
				<required>T</required>
				<datapool></datapool>
				<comment>用于设置要打开的浏览器种类</comment>
			</param>
			<param id='useragent'>
				<name>user-agent</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment>选填项，用于设置浏览器的user-agent值来伪装浏览器版本，目前仅支持火狐浏览器伪装，如伪装版本：Mozilla/5.0 (X11; Linux i686; rv:16.0) Gecko/20100101 Firefox/16.0 可以解决易付宝密码框无法输入的问题。</comment>
			</param>
		</keyword>
		<keyword id='web_browser_maximize'>
			<name>浏览器最大化</name>
			<comment>浏览器页面最大化</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserMaximize</implement>
			<show>1</show>
		</keyword>	
		<keyword id='web_browser_activate'>
			<name>浏览器激活</name>
			<comment>根据别名激活浏览器（多浏览器场景下）</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserActivate</implement>
			<show>1</show>
			<param id='alias'>
				<name>浏览器别名</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment>用于选择待操作的浏览器别名</comment>
			</param>
		</keyword>	
		<keyword id='web_browser_locate'>
			<name>浏览器地址输入</name>
			<comment>模拟浏览器重新输入URL（用于浏览器已经打开时）</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserLocate</implement>
			<show>1</show>
			<param id='url'>
				<name>网址</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待打开的URL地址</comment>
			</param>
		</keyword>	
		<keyword id='web_browser_back'>
			<name>浏览器后退</name>
			<comment>浏览器页面后退</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserBack</implement>
			<show>1</show>
		</keyword>	
		<keyword id='web_browser_forward'>
			<name>浏览器前进</name>
			<comment>浏览器页面前进</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserForward</implement>
			<show>1</show>
		</keyword>	
		<keyword id='web_browser_refresh'>
			<name>浏览器刷新</name>
			<comment>浏览器页面刷新</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserRefresh</implement>
			<show>1</show>
		</keyword>	
		<keyword id='web_browser_quit'>
			<name>浏览器退出</name>
			<comment>关闭指定别名的浏览器从初始打开至关闭之前关联打开的所有页面窗口</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserQuit</implement>
			<show>1</show>
			<param id='alias'>
				<name>浏览器别名</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment>用于选择待操作的浏览器别名（若待关闭浏览器初始打开别名为空，则此处不输入）</comment>
			</param>
		</keyword>	
		<keyword id='web_browser_close'>
			<name>浏览器关闭</name>
			<comment>关闭当前浏览器的当前窗口页面</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserClose</implement>
			<show>1</show>
		</keyword>
		<keyword id='web_browser_close_andSwitch'>
			<name>浏览器关闭并切换到原始窗口</name>
			<comment>浏览器关闭并切换到原始窗口</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserCloseAndSwitch</implement>
			<show>1</show>
		</keyword>
		<keyword id='web_browser_killAll'>
			<name>浏览器进程清除</name>
			<comment>清除当前所有的浏览器进程，包括IE、Firefox、Chrome。可作为容错步骤使用</comment>
			<implement>org.tn.qa.automation.keyword.CommonKeyword:killAllBrowsers</implement>
			<show>1</show>
		</keyword>
		<keyword id='web_browser_snapshot'>
			<name>屏幕快照</name>
			<comment>抓取电脑屏幕内容快照</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserSnapshot</implement>
			<show>1</show>
		</keyword>
		<keyword id='web_browser_snapshot1'>
			<name>浏览器快照</name>
			<comment>抓取浏览器内容快照</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:browserSnapshot1</implement>
			<show>1</show>
		</keyword>		
		<keyword id='web_browser_switch_window'>
			<name>浏览器窗口切换</name>
			<comment>根据窗口标题切换当前浏览器的窗口，窗口标题支持模糊输入</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:switchWindow</implement>
			<show>1</show>
			<param id='title'>
				<name>窗口标题</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment>待切换的浏览器窗口标题，支持模糊输入。若某窗口无标题，则不输入</comment>
			</param>
		</keyword>	
		<keyword id='web_browser_switch_frame'>
			<name>浏览器页面框架切换</name>
			<comment>在当前窗口页面中，根据输入的框架的元素取值切换框架</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:switchFrame</implement>
			<show>1</show>
			<param id='locator'>
				<name>框架定位符</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment>框架的控件元素取值，可不输入，不输入时默认切至页面缺省主框架</comment>
			</param>
		</keyword>	
		<keyword id='web_browser_click_alert'>
			<name>弹框点击操作</name>
			<comment>首先判断当前是否存在弹出框，存在则根据输入选项，对弹出框进行确认/取消操作；不存在则不做操作</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:clickAlert</implement>
			<show>1</show>
			<param id='isAccept'>
				<name>弹框操作</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>对弹框进行确认/继续操作，请输入true；对弹框进行取消操作，请输入false</comment>
			</param>
		</keyword>	
			<keyword id='web_browser_execute_js'>
			<name>执行JS脚本</name>
			<comment>模拟执行JS脚本</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:executeJScript</implement>
			<show>1</show>
			<param id='script'>
				<name>脚本内容</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>JS脚本内容,Eg:arguments[0].setAttribute('value', arguments[1]);</comment>
			</param>
			<param id='arg1'>
				<name>脚本参数1</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment>JS脚本参数1，若不需要可不输入.Eg:arguments[0]参数是某个对象，输入 WebElement</comment>
			</param>
			<param id='arg2'>
				<name>脚本参数2</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment>JS脚本参数2，若不需要可不输入。Eg:arguments[1]参数是字符串，输入 123456ok</comment>
			</param>
			<param id='arg3'>
				<name>脚本参数3</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment>JS脚本参数3，若不需要可不输入</comment>
			</param>
		</keyword>	
		<keyword id='web_browser_wait_for_exist'>
			<name>等待控件存在性判断</name>
			<comment>等待某控件存在/不存在，等待最多为配置的最大等待时间，超时与预期判断不符则抛异常</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:waitForElementExist</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>该控件的元素定位取值，请注意输入格式，Eg: name::abc</comment>
			</param>
			<param id='isExist'>
				<name>预期存在性</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期某控件存在，请选择true；预期某控件不存在，请选择false</comment>
			</param>
		</keyword>
		<keyword id='web_browser_wait_for_visible'>
			<name>等待控件可见性判断</name>
			<comment>等待某控件可见/不可见,等待最多为配置的最大等待时间，超时与预期判断不符则抛异常</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:waitForElementVisible</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>该控件的元素定位取值，请注意输入格式，Eg: name::abc</comment>
			</param>
			<param id='isVisible'>
				<name>预期可见性</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期某控件存在，请选择true; 预期某控件不可见，请选择false</comment>
			</param>
		</keyword>
		<keyword id='web_browser_wait_for_text'>
			<name>等待控件文本匹配性判断</name>
			<comment>等待某控件文本匹配/不匹配，支持文本的模糊匹配,等待最多为配置的最大等待时间，超时与预期判断不符则抛异常</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:waitForElementText</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>该控件的元素定位取值，请注意输入格式，Eg: name::abc</comment>
			</param>
			<param id='text'>
				<name>预匹配文本</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment>预期匹配的文本，若某控件不存在文本，则可不输</comment>
			</param>
			<param id='isMatched'>
				<name>预期匹配性</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期某文本与控件文本匹配，请选择true; 预期某文本与控件文本不匹配，请输入false</comment>
			</param>
		</keyword>
		<keyword id='web_browser_get_url'>
			<name>获取当前页面URL</name>
			<comment>获取当前页面URL，并将此URL输出至某个定义的上下文常量中</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:getBrowserUrl</implement>
			<show>1</show>
			<param id='outVar'>
				<name>输出变量名称[OUT]</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的当前URL存入该变量并保存在上下文待引用。输入举例：var_url</comment>
			</param>
		</keyword>
		<keyword id='web_browser_scroll_vertical_bar'>
			<name>滚动条纵向移动</name>
			<comment>根据输入的像素距离滚动条向下移动，缺省值为-1，表示移动至页尾。为0时，表示移动至页头。</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:scrollVerticalBar</implement>
			<show>1</show>
			<param id='height'>
				<name>滚动距离</name>
				<default>-1</default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>滚动条移动像素距离，默认为-1，表示移动至页尾；为0时，表示移动至页头</comment>
			</param>
		</keyword>
		<keyword id='web_browser_getCookieValueByName'>
			<name>获取cookie的值</name>
			<comment>根据输入的cookie名称，获取该cookie的value属性值，并保存在变量中放入上下文待引用</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:getCookieValueByName</implement>
			<show>1</show>
			<param id='cookieName'>
				<name>cookie名称</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>cookie的名称，如WC_SERVER -账号的实例点存放cookie名称</comment>
			</param>
			<param id='cookieValue'>
				<name>输出变量名称[OUT]</name>
				<default>var_cookieValue</default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的cookie的value值存入该变量并保存在上下文待引用。输入举例：var_cookieValue</comment>
			</param>
		</keyword>
		<keyword id='web_browser_deleteAllCookies'>
			<name>删除所有cookies</name>
			<comment>删除当前的所有cookies</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:deleteAllCookies</implement>
			<show>1</show>
		</keyword>
		<keyword id='web_browser_deleteCookieNamed'>
			<name>删除某个cookie</name>
			<comment>根据输入的cookie名称，删除该cookie</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:deleteCookieNamed</implement>
			<show>1</show>
			<param id='cookieName'>
				<name>cookie名称</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>cookie的名称，如WC_SERVER -账号的实例点存放cookie名称</comment>
			</param>
		</keyword>
		<keyword id='web_browser_addCookie'>
			<name>增加cookie</name>
			<comment>根据输入的cookie名称及value值，增加cookie</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:addCookie</implement>
			<show>1</show>
			<param id='key'>
				<name>cookie名称</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待增加的cookie的名称</comment>
			</param>
			<param id='value'>
				<name>cookie值</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待增加的cookie的值</comment>
			</param>
		</keyword>
		<keyword id='web_browser_ScrolltoBottom'>
			<name>页面滚动到底部(每次500像素)</name>
			<comment>页面滚动到底部(每次500像素)</comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:ScrolltoBottom</implement>
			<show>1</show>
		</keyword>	
	</group>	

	<group name='校验操作'>
		<keyword id='web_verify_Page_open'>
			<name>校验网页是否打开</name>
			<comment>校验网页是否打开，预期打开输入true，预期打不开输入false。若预期与实际不符则会抛出异常</comment>
			<implement>org.tn.qa.automation.keyword.VerifyKeyword:verifyPage</implement>
			<show>1</show>
			<param id='url'>
				<name>页面URL</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>页面URL，请注意输入正确格式，多个url以;隔开;格式举例：http://www.staging.tuniu.org</comment>
			</param>
			<param id='matched'>
				<name>预期</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期页面正常打开，请选择true; 预期页面无法打开，请输入false</comment>
			</param>
		</keyword>
		<keyword id='web_verify_element_visible'>
			<name>校验控件可见性</name>
			<comment>校验某控件是否可见，预期可见输入true，预期不可见输入false。若预期与实际不符则会抛出异常</comment>
			<implement>org.tn.qa.automation.keyword.VerifyKeyword:verifyElementVisible</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待校验控件的元素取值，请注意输入正确格式，格式举例：name::abc</comment>
			</param>
			<param id='isVisible'>
				<name>预期可见性</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期控件可见，请选择true; 预期控件不可见，请输入false</comment>
			</param>
		</keyword>			
		<keyword id='web_verify_element_enabled'>
			<name>校验控件可用性</name>
			<comment>校验控件是否可用。预期可用输入true，预期不可用输入false。若预期与实际不符则会抛出异常</comment>
			<implement>org.tn.qa.automation.keyword.VerifyKeyword:verifyElementEnabled</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待校验控件定位符,请注意输入正确格式，格式举例：name::abc</comment>
			</param>
			<param id='isEnabled'>
				<name>预期可用性</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期控件可用，请输入true; 预期控件不可用，请输入false</comment>
			</param>		
		</keyword>	
		<keyword id='web_verify_element_selected'>
			<name>校验控件是否已选中</name>
			<comment>校验控件是否被选中，该控件为单选框或复选框。预期选中输入true，预期未选中输入false；若预期与实际不符，则会抛出异常</comment>
			<implement>org.tn.qa.automation.keyword.VerifyKeyword:verifyElementSelected</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待校验单选框或复选框的控件元素取值，请注意输入正确格式，格式举例：name::abc</comment>
			</param>
			<param id='isSelected'>
				<name>预期选中状态</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期控件为选中状态，请选择true; 预期控件为未选中状态，请选择false</comment>
			</param>		
		</keyword>
		<keyword id='web_verify_element_existed'>
			<name>校验控件是否存在</name>
			<comment>校验控件是否存在，预期存在输入true，预期不存在输入false；若预期与实际不符，则会抛出异常</comment>
			<implement>org.tn.qa.automation.keyword.VerifyKeyword:verifyElementExisted</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待校验存在性控件元素取值，请注意输入正确格式，格式举例：name::abc</comment>
			</param>
			<param id='isExisted'>
				<name>预期存在状态</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期控件为存在状态，请选择true; 预期控件为不存在状态，请选择false</comment>
			</param>		
		</keyword>
		<keyword id='web_verify_element_text'>
			<name>校验控件文本</name>
			<comment>校验控件文本内容与输入内容是否在指定模式下与期望的匹配结果相同。
            如，控件文本为a1，预期文本为a2，期望结果为true，模糊匹配模式，可以理解为，期望a1包含a2；
			反之若期望结果为false，则期望a1不包含a2。
			匹配结果与期望不一致则抛异常。
			</comment>
			<implement>org.tn.qa.automation.keyword.VerifyKeyword:verifyElementText</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待校验控件定位符，请注意输入正确格式，格式举例：name::abc</comment>
			</param>
			<param id='text'>
				<name>预期文本</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期文本，请根据待指定的匹配模式输入</comment>
			</param>
			<param id='matched'>
				<name>预期结果</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期的匹配结果，若期望匹配成功，请选择true；若期望匹配失败，请选择false</comment>
			</param>
			<param id='mode'>
				<name>匹配模式</name>
				<default>精确匹配</default>
				<values>精确匹配\r\n模糊匹配\r\n正则表达式匹配</values>
				<required>T</required>
				<datapool></datapool>
				<comment>匹配模式，请根据实际需要选择。</comment>
			</param>
		</keyword>
		<keyword id='web_verify_element_attribute'>
			<name>校验控件属性值</name>
			<comment>校验控件某属性的值与输入内容是否在指定模式下与期望的匹配结果相同。
            如，控件某属性值为a1，预期为a2，期望结果为true，模糊匹配模式，可以理解为，期望a1包含a2；
			反之若期望结果为false，则期望a1不包含a2。
			匹配结果与期望不一致则抛异常。
			</comment>
			<implement>org.tn.qa.automation.keyword.VerifyKeyword:verifyElementAttribute</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待校验控件定位符，请注意输入正确格式，格式举例：name::abc</comment>
			</param>
			<param id='attribute'>
				<name>控件属性</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待校验控件的某个属性。如，value、tagname、type、height等</comment>
			</param>
			<param id='value'>
				<name>预期属性值</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期属性值，请根据待指定的匹配模式输入</comment>
			</param>
			<param id='matched'>
				<name>预期结果</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期的匹配结果，若期望匹配成功，请选择true；若期望匹配失败，请选择false</comment>
			</param>
			<param id='mode'>
				<name>匹配模式</name>
				<default>精确匹配</default>
				<values>精确匹配\r\n模糊匹配\r\n正则表达式匹配</values>
				<required>T</required>
				<datapool></datapool>
				<comment>匹配模式，请根据实际需要选择。</comment>
			</param>
		</keyword>
		<keyword id='web_verify_current_url'>
			<name>校验当前页面URL</name>
			<comment>校验当前页面URL与输入URL是否在指定的匹配模式下与预期匹配结果一致。
			如，预期url为a1，匹配模式为模糊匹配，期望结果为true，可以理解为：期望当前URL中包含a1；
			反之，期望结果为false，则期望当前URL中不包含a1
			匹配结果与预期不一致，则抛异常
			</comment>
			<implement>org.tn.qa.automation.keyword.VerifyKeyword:verifyCurrentUrl</implement>
			<show>1</show>
			<param id='url'>
				<name>预期URL</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期URL，请按待指定的匹配模式输入</comment>
			</param>
			<param id='matched'>
				<name>预期结果</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期的匹配结果，若期望匹配成功，请选择true；若期望匹配失败，请选择false</comment>
			</param>
			<param id='mode'>
				<name>匹配模式</name>
				<default>精确匹配</default>
				<values>精确匹配\r\n模糊匹配\r\n正则表达式匹配</values>
				<required>T</required>
				<datapool></datapool>
				<comment>匹配模式，请根据实际需要选择</comment>
			</param>	
		</keyword>
		<keyword id='web_verify_alert_text'>
			<name>校验弹出框文本</name>
			<comment>校验弹出框文本与输入的预期文本是否在指定的模式下相匹配。
            如，预期文本为a1，匹配模式为模糊匹配，期望结果为true，可以理解为：期望弹框文本中包含a1；
			反之，期望结果为false，则理解为：期望弹框文本中不包含a1
			若不匹配则会抛出异常</comment>
			<implement>org.tn.qa.automation.keyword.VerifyKeyword:verifyAlertText</implement>
			<show>1</show>
			<param id='text'>
				<name>预期文本</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期文本，请根据待指定的匹配模式输入</comment>
			</param>
			<param id='matched'>
				<name>预期结果</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期的匹配结果，若期望匹配成功，请选择true；若期望匹配失败，请选择false</comment>
			</param>
			<param id='mode'>
				<name>匹配模式</name>
				<default>精确匹配</default>
				<values>精确匹配\r\n模糊匹配\r\n正则表达式匹配</values>
				<required>T</required>
				<datapool></datapool>
				<comment>匹配模式，请根据实际需要选择</comment>
			</param>	
		</keyword>
		<keyword id='web_verify_combo_select'>
			<name>校验下拉选项文本</name>
			<comment>校验下拉选项文本，是否包含指定的ITEM</comment>
			<implement>org.tn.qa.automation.keyword.VerifyKeyword:verifyComboSelectOption</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待校验控件定位符，请注意输入正确格式，格式举例：name::abc</comment>
			</param>
			<param id='text'>
				<name>预期文本</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期文本，请根据待指定的匹配模式输入</comment>
			</param>
			<param id='matched'>
				<name>预期结果</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期的匹配结果，若期望匹配成功，请选择true；若期望匹配失败，请选择false</comment>
			</param>
		</keyword>
	</group>	
	<group name='控件操作'>
		
		<keyword id='mobile_element_getSizeX'>
			<name>获取元素宽度</name>
			<comment>根据输入的元素获取横坐标</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:getSizeX</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待获取文本内容的控件的定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>		
			<param id='outX'>
				<name>输出变量名称[OUT]</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的控件文本内容存入该变量并保存在上下文待引用。输入举例：var_SizeX</comment>
			</param>			
		</keyword>
		<keyword id='mobile_element_getSizeY'>
			<name>获取元素高度</name>
			<comment>根据输入的元素获取纵坐标</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:getSizeY</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待获取文本内容的控件的定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>		
			<param id='outY'>
				<name>输出变量名称[OUT]</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的控件文本内容存入该变量并保存在上下文待引用。输入举例：var_SizeY</comment>
			</param>			
		</keyword>
		<keyword id='mobile_element_getLocationX'>
			<name>获取元素横坐标</name>
			<comment>根据输入的元素获取横坐标</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:getLocationX</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待获取文本内容的控件的定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>		
			<param id='outX'>
				<name>输出变量名称[OUT]</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的控件文本内容存入该变量并保存在上下文待引用。输入举例：var_getLocationX</comment>
			</param>			
		</keyword>
		<keyword id='mobile_element_getLocationY'>
			<name>获取元素纵坐标</name>
			<comment>根据输入的元素获取纵坐标</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:getLocationY</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待获取文本内容的控件的定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>		
			<param id='outY'>
				<name>输出变量名称[OUT]</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的控件文本内容存入该变量并保存在上下文待引用。输入举例：var_getLocationY</comment>
			</param>			
		</keyword>				
		<keyword id='mobile_findelement_Scroll'>
			<name>滚动浏览器查找元素</name>
			<comment>在当前屏幕根据定位符查找元素，如果没找到滚动浏览器查找元素（最多滚动50次）</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:findElementByScroll</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待点击的控件定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>
		</keyword>
		<keyword id='mobile_clickelement_Scroll'>
			<name>点击元素（元素通过滚动浏览器查找）</name>
			<comment>在当前屏幕根据定位符查找元素，如果没找到则滑屏继续查找（最多滑动50次），找到则点击它</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:clickElementByScroll</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待点击的控件定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>
		</keyword>				
		<keyword id='mobile_findElementandScroll'>
			<name>查找元素并且浏览器滚动到元素指定偏移位置</name>
			<comment>在当前屏幕根据定位符查找元素，如果没找到则滑屏继续查找（最多滑动50次），找到则滚动到该元素纵坐标向上偏移指定像素的位置</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:findElementandScroll</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待点击的控件定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>
			<param id='offset'>
				<name>元素纵坐标的偏移位置</name>
				<default>50</default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>指定滚动到元素的纵坐标的偏移位置，需是整数，整数是指向上偏移，负数是指向下偏移</comment>
			</param>
		</keyword>
		<keyword id='web_element_click'>
			<name>控件点击</name>
			<comment>根据定位符查找控件，并模拟鼠标点击该控件</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:elementClick</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待点击的控件定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>
		</keyword>
		<keyword id='web_isElementExist_click'>
			<name>元素存在click元素</name>
			<comment>，适用于可以点击的元素，判断元素存在，存在点击该元素，不存在，不做操作，可以点击当前元素，也可点击另一个元素</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:verifyelementExistedToClick</implement>
			<show>1</show>
			<param id='locator1'>
				<name>元素1</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待查找元素,手动填写定位信息，不是用map</comment>
			</param>
			<param id='isExist'>
				<name>是否存在</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期元素是否存在</comment>
			</param>
			<param id='locator2'>
				<name>点击的元素</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>需要点击的元素</comment>
			</param>
		</keyword>
		<keyword id='web_element_click_and_switch'>
			<name>控件点击并切至新打开窗口</name>
			<comment>根据定位符查找控件，模拟鼠标点击该控件并切换至新打开窗口(适用于鼠标点击会打开新窗口且需在新窗口操作的场景) </comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:elementClickAndSwitch</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待点击的控件定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>
		</keyword>
		<keyword id='web_element_context_click'>
			<name>控件右键点击</name>
			<comment>根据控件定位符查找控件，并模拟鼠标右键点击该控件</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:elementContextClick</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待右键点击的控件定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>			
		</keyword>
		<keyword id='web_element_double_click'>
			<name>控件双击</name>
			<comment>根据控件定位符查找控件，并模拟鼠标双击该控件</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:elementDoubleClick</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待双击的控件定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>			
		</keyword>	
		<keyword id='web_element_move'>
			<name>鼠标移动</name>
			<comment>根据控件定位符查找控件，并模拟鼠标移动至该控件</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:elementMove</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待移动至的控件定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>			
		</keyword>		
		<keyword id='web_element_drag'>
			<name>鼠标拖拽</name>
			<comment>根据源控件定位符和目的定位符查找，并模拟鼠标将原控件拖拽至目的控件</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:elementDrag</implement>
			<show>1</show>
			<param id='source'>
				<name>源控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待拖拽的原目标定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>
			<param id='target'>
				<name>目的控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>拖拽到的指定目标定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>
		</keyword>
		<keyword id='web_element_text_input'>
			<name>文本框文本输入</name>
			<comment>根据文本框控件定位符查找文本框位置，清空文本框中原文字，同时将期望文字模拟输入至文本框中</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:textInput</implement>
			<show>1</show>
			<param id='locator'>
				<name>文本框控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>文本框控件定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>
			<param id='text'>
				<name>待输入的文字</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment>待输入的文字</comment>
			</param>			
		</keyword>
		<keyword id='web_element_check_click'>
			<name>复选框点击</name>
			<comment>根据控件定位符查找复选框。若期望为true，则将所有查找的所有复选框中原未勾选的变为勾选状态，若期望为false，反之将原已勾选的变为未勾状态</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:checkClick</implement>
			<show>1</show>
			<param id='locator'>
				<name>复选框控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>复选框控件定位符，可包含多个复选框，请注意输入格式，格式举例：xpath:://abc//input</comment>
			</param>
			<param id='isChecked'>
				<name>勾选状态</name>
				<default>true</default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>期望的复选框勾选状态。期望勾选请选择true; 期望不勾选请选择false</comment>
			</param>			
		</keyword>
		<keyword id='web_element_radio_click'>
			<name>单选框点击</name>
			<comment>根据控件定位符查找某单选框。若期望为true，则将未勾选单选框勾选.（若期望为false，则将未勾选的单选框仍不勾选，已勾选的则不做操作，无意义）</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:radioClick</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待点击的单选框控件定位符，请注意输入格式，格式举例：xpath:://abc/input</comment>
			</param>
			<param id='isSelected'>
				<name>勾选状态</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>期望的勾选状态。期望勾选，请选择true；期望不勾选，请选择false</comment>
			</param>			
		</keyword>
		<keyword id='web_element_combo_select'>
			<name>下拉列表选择</name>
			<comment>根据控件定位符查找该下拉列表，模拟下拉列表的选择。下拉列表默认以内容值作为选择条件；若以索引为选择条件，则输入选择项所在的位置。如0,1,2,3...</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:comboSelect</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>下拉列表的控件定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>
			<param id='type'>
				<name>选择类型</name>
				<default>内容</default>
				<values>内容\r\n索引</values>
				<required>T</required>
				<datapool></datapool>
				<comment>选择类型，下拉列表以何类型为选择条件</comment>
			</param>
			<param id='value'>
				<name>属性值</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>选择类型的属性值，需要在勾选选择类型后，根据选择类型填值。类型为"内容"，请输入下拉列表文本内容；类型为索引，请输入文本所在位置值，如0,1...</comment>
			</param>
		</keyword>
		<keyword id='web_element_get_element_attribute'>
			<name>获取控件属性值</name> 
			<comment>根据输入的定位符查找该控件，然后获取该控件的属性值，存入输出变量，保存至变量中放入上下文中待引用</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:getElementAttribute</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待获取属性的控件的定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>
			<param id='name'>
				<name>属性名称</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期欲获取控件的某个属性的名称，如id,name,href，height</comment>
			</param>
			<param id='outVar'>
				<name>输出变量名称[OUT]</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的控件属性值存入该变量并保存在上下文待引用。输入举例：var_value</comment>
			</param>
		</keyword>
		<keyword id='web_element_set_element_attribute'>
			<name>设置控件属性值</name> 
			<comment>根据输入的定位符查找该控件，然后设置该控件的属性值，存入输出变量，保存至变量中放入上下文中待引用</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:setElementAttribute</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待设置控件属性的控件的定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>
			<param id='name'>
				<name>属性名称</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期欲获取控件的某个属性的名称，如id,name,href，height</comment>
			</param>
			<param id='value'>
				<name>属性值</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>属性值，如果想设置为空时，则值填写empty</comment>
			</param>
		</keyword>
		<keyword id='web_element_get_element_text'>
			<name>获取控件文本</name>
			<comment>根据输入的控件定位符查找控件，并将此控件的文本内容存入输出变量中保存在上下文待引用</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:getElementText</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待获取文本内容的控件的定位符，请注意输入格式，格式举例：name::abc</comment>
			</param>		
			<param id='outVar'>
				<name>输出变量名称[OUT]</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的控件文本内容存入该变量并保存在上下文待引用。输入举例：var_text</comment>
			</param>			
		</keyword>
		<keyword id='web_element_get_table_element'>
			<name>获取表格中的控件文本</name>
			<comment>根据某表的控件定位符查询该表，然后根据所在该表具体表格的控件路径查询该控件，将控件对象存入输出变量参数保存至上下文待引用</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:getTableElement</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待查询表的定位符，请注意输入格式，格式举例：xPath:://abc/../table</comment>
			</param>	
			<param id='outVar'>
				<name>输出变量名称[OUT]</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的表格中的控件元素对象存入该变量并保存在上下文待引用。输入举例：var_element</comment>
			</param>
			<param id='xpath'>
				<name>控件元素路径</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待查找控件所在表格中的路径，如/table/tr/td/div/input,则input控件路径输入：//div/input</comment>
			</param>
			<param id='col'>
				<name>控件元素所在列</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待查找控件元素所在列，列号从1开始，如在第3列，请输入数字3</comment>
			</param>
			<param id='row'>
				<name>控件元素所在行</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>控件元素所在行，行号从1开始，如在第2行，请输入数字2</comment>
			</param>			
		</keyword>
		<keyword id='Resouce_GetElementExistedSize'>
			<name>获取控件个数</name>
			<comment>获取控件个数</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:GetElementExistedSize</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待查询表的定位符，请注意输入格式，格式举例：id::id</comment>
			</param>
			<param id='outVar'>
				<name>输出变量名称[OUT]</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的表格中的控件元素对象存入该变量并保存在上下文待引用。输入举例：var_element
				</comment>
			</param>
		</keyword>
		<keyword id='Resouce_GetElementExistedSizeAndValue'>
			<name>获取控件个数和属性</name>
			<comment>获取控件个数和属性</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:GetElementExistedSizeAndValue</implement>
			<show>1</show>
			<param id='locator'>
				<name>控件定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待查询表的定位符，请注意输入格式，格式举例：id::id</comment>
			</param>
			<param id='outVar'>
				<name>输出变量名称[OUT]</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的表格中的控件元素对象存入该变量并保存在上下文待引用。输入举例：var_element
				</comment>
			</param>
			<param id='name'>
				<name>属性名称</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待查询表的定位符，请注意输入格式，格式举例：id::id</comment>
			</param>
			<param id='outVar1'>
				<name>输出变量名称[OUT]</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>输出变量名称，将获取的表格中的控件元素对象存入该变量并保存在上下文待引用。输入举例：var_element
				</comment>
			</param>
		</keyword>	
		<keyword id='web_key_press'>
			<name>键盘动作</name>
			<comment>根据输入的键盘动作，模拟键盘操作</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:keyPress</implement>
			<show>1</show>
			<param id='key'>
				<name>键盘操作符</name>
				<default></default>
				<values>Enter\r\nBackSpace\r\nPageUp\r\nPageDown\r\nLeft\r\nRight\r\nHome\r\nEnd\r\nTab</values>
				<required>T</required>
				<datapool></datapool>
				<comment>待选择的键盘操作</comment>
			</param>
			<param id='count'>
				<name>操作次数</name>
				<default>1</default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>键盘操作的次数，默认1次</comment>
			</param>
		</keyword>
				<keyword id='web_element_uploadfile_common'>
			<name>文件上传_普通</name>
			<comment>在不打开window对话框的情况下进行文件上传，对应普通型的上传控件input，其属性type=file;比如soa首页的头像上传、易购账号的个人头像上传</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:uploadFile</implement>
			<show>1</show>
			<param id='locator'>
				<name>文件框定位符</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待上传文件的文件框定位符，对应普通型的上传控件input，其属性type=file;比如soa首页的头像上传、易购账号的个人头像上传。请注意输入格式，格式举例：name::abc</comment>
			</param>
			<param id='FileSelector'>
				<name>文件来源</name>
				<default>本地</default>
				<values>本地\r\n工程</values>
				<required>T</required>
				<datapool></datapool>
				<comment>待上传文件的来源，本地or工程，二选一</comment>
			</param>
			<param id='text'>
				<name>文件路径</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>文件路径。选择本地请填写完整的绝对路径,如 E:\图片\123.jpg; 选择工程请填写正确的相对路径,如 file/123.jpg</comment>
			</param>
		</keyword>
		<keyword id='web_element_uploadFileAu3'>
			<name>文件上传_其它</name>
			<comment>模拟手工操作在打开window对话框的情况下进行文件上传，对应改进型第三方插件类的控件，比如属性type=flash;此类有云盘的文件上传</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:uploadFileAu3</implement>
			<show>1</show>
			<param id='winTitle'>
				<name>window框定位</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>window对话框定位字符串，可以为window框的title或class。eg1：请选择要上传的文件,eg2:[CLASS:#32770]</comment>
			</param>
			<param id='inputID'>
				<name>文件名框定位</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>window对话框中的文件名输入框定位字符串，可以是文件名框的ID/CLLASS/CLASSNN/NAME/REGEXPCLASS/INSTANCE/TEXT,也可以组合。eg1：Edit1,eg2：[CLASSNN:Edit1],eg3：[CLASS:Edit;INSTANCE:1]</comment>
			</param>
			<param id='btnID'>
				<name>打开按钮定位</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>window对话框中的打开按钮定位字符串，可以是打开按钮的ID/CLLASS/CLASSNN/NAME/REGEXPCLASS/INSTANCE/TEXT,也可以组合。eg1：Edit1,eg2：[CLASSNN:Edit1],eg3：[CLASS:Button;INSTANCE:1]</comment>
			</param>
			<param id='FileSelector'>
				<name>文件来源</name>
				<default>本地</default>
				<values>本地\r\n工程</values>
				<required>T</required>
				<datapool></datapool>
				<comment>待上传文件的来源，本地or工程，二选一</comment>
			</param>
			<param id='filePath'>
				<name>文件路径</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>文件路径。选择本地请填写完整的绝对路径,如 E:\图片\123.jpg；选择工程请填写正确的相对路径,如 file/123.jpg</comment>
			</param>
		</keyword>
		<keyword id='getUrlParam'>
			<name>从URL中获取参数</name>
			<comment></comment>
			<implement>org.tn.qa.automation.keyword.BrowserKeyword:getUrlParam</implement>
			<show>1</show>
			<param id='url'>
				<name>url</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>]</comment>
			</param>
			<param id='param'>
				<name>参数</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment></comment>
			</param>
			<param id='out'>
				<name>out</name>
				<default></default>
				<values></values>
				<required>F</required>
				<datapool></datapool>
				<comment></comment>
			</param>
		</keyword>
		<keyword id='web_isElementExist_click'>
			<name>元素存在click元素</name>
			<comment>，适用于可以点击的元素，判断元素存在，存在点击该元素，不存在，不做操作</comment>
			<implement>org.tn.qa.automation.keyword.WebElementKeyword:elementExistToClick</implement>
			<show>1</show>
			<param id='locator1'>
				<name>元素1</name>
				<default>xpath:://</default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>待查找元素</comment>
			</param>
			<param id='isExist'>
				<name>是否存在</name>
				<default>true</default>
				<values>true\r\nfalse</values>
				<required>T</required>
				<datapool></datapool>
				<comment>预期元素是否存在</comment>
			</param>
			<param id='locator2'>
				<name>点击的元素</name>
				<default></default>
				<values></values>
				<required>T</required>
				<datapool></datapool>
				<comment>需要点击的元素,可以和查找的元素一样</comment>
			</param>
		</keyword>
	</group>
</group>
	</root>