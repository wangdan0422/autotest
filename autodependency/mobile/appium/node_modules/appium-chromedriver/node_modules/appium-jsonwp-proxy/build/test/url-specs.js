

/* global describe:true, it:true */

'use strict';

var _interopRequireWildcard = require('babel-runtime/helpers/interop-require-wildcard')['default'];

var _JWProxy = require('../..');

var _chai = require('chai');

var _chai2 = _interopRequireWildcard(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireWildcard(_chaiAsPromised);

//import Q from 'q';

require('mochawait');

require('source-map-support').install();

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('proxying full urls', function () {
  it('should translate host and port', function () {
    var incomingUrl = 'http://127.0.0.2:4723/wd/hub/status';
    var j = new _JWProxy.JWProxy();
    var proxyUrl = j.getUrlForProxy(incomingUrl);
    proxyUrl.should.equal('http://localhost:4444/wd/hub/status');
  });
  it('should translate the scheme', function () {
    var incomingUrl = 'http://127.0.0.2:4723/wd/hub/status';
    var j = new _JWProxy.JWProxy({ scheme: 'HTTPS' });
    var proxyUrl = j.getUrlForProxy(incomingUrl);
    proxyUrl.should.equal('https://localhost:4444/wd/hub/status');
  });
  it('should translate the base', function () {
    var incomingUrl = 'http://127.0.0.2:4723/wd/hub/status';
    var j = new _JWProxy.JWProxy({ base: '' });
    var proxyUrl = j.getUrlForProxy(incomingUrl);
    proxyUrl.should.equal('http://localhost:4444/status');
  });
  it('should translate the session id', function () {
    var incomingUrl = 'http://127.0.0.2:4723/wd/hub/session/foobar/element';
    var j = new _JWProxy.JWProxy({ sessionId: 'barbaz' });
    var proxyUrl = j.getUrlForProxy(incomingUrl);
    proxyUrl.should.equal('http://localhost:4444/wd/hub/session/barbaz/element');
  });
  it('should error when translating session commands without session id', function () {
    var incomingUrl = 'http://127.0.0.2:4723/wd/hub/session/foobar/element';
    var j = new _JWProxy.JWProxy();
    (function () {
      j.getUrlForProxy(incomingUrl);
    }).should['throw']('session id');
  });
});

describe('proxying partial urls', function () {
  it('should proxy /status', function () {
    var incomingUrl = '/status';
    var j = new _JWProxy.JWProxy();
    var proxyUrl = j.getUrlForProxy(incomingUrl);
    proxyUrl.should.equal('http://localhost:4444/wd/hub/status');
  });
  it('should proxy /session', function () {
    var incomingUrl = '/session';
    var j = new _JWProxy.JWProxy();
    var proxyUrl = j.getUrlForProxy(incomingUrl);
    proxyUrl.should.equal('http://localhost:4444/wd/hub/session');
  });
  it('should proxy /sessions', function () {
    var incomingUrl = '/sessions';
    var j = new _JWProxy.JWProxy();
    var proxyUrl = j.getUrlForProxy(incomingUrl);
    proxyUrl.should.equal('http://localhost:4444/wd/hub/sessions');
  });
  it('should proxy session commands based off /session', function () {
    var incomingUrl = '/session/foobar/element';
    var j = new _JWProxy.JWProxy({ sessionId: 'barbaz' });
    var proxyUrl = j.getUrlForProxy(incomingUrl);
    proxyUrl.should.equal('http://localhost:4444/wd/hub/session/barbaz/element');
  });
  it('should error session commands based off /session without session id', function () {
    var incomingUrl = '/session/foobar/element';
    var j = new _JWProxy.JWProxy();
    (function () {
      j.getUrlForProxy(incomingUrl);
    }).should['throw']('session id');
  });
  it('should proxy session commands based off /wd/hub', function () {
    var incomingUrl = '/wd/hub/session/3d001db2-7987-42a7-975d-8d5d5304083f/timeouts/implicit_wait';
    var j = new _JWProxy.JWProxy({ sessionId: '123' });
    var proxyUrl = j.getUrlForProxy(incomingUrl);
    proxyUrl.should.equal('http://localhost:4444/wd/hub/session/123/timeouts/implicit_wait');
  });
  it('should proxy session commands based off /session as ""', function () {
    var incomingUrl = '';
    var j = new _JWProxy.JWProxy();
    (function () {
      j.getUrlForProxy(incomingUrl);
    }).should['throw']('session id');
    j = new _JWProxy.JWProxy({ sessionId: '123' });
    var proxyUrl = j.getUrlForProxy(incomingUrl);
    proxyUrl.should.equal('http://localhost:4444/wd/hub/session/123');
  });
  it('should proxy session commands without /session', function () {
    var incomingUrl = '/element';
    var j = new _JWProxy.JWProxy({ sessionId: 'barbaz' });
    var proxyUrl = j.getUrlForProxy(incomingUrl);
    proxyUrl.should.equal('http://localhost:4444/wd/hub/session/barbaz/element');
  });
  it('should error session commands without /session without session id', function () {
    var incomingUrl = '/element';
    var j = new _JWProxy.JWProxy();
    (function () {
      j.getUrlForProxy(incomingUrl);
    }).should['throw']('session id');
  });
});
//# sourceMappingURL=data:application/json;base64,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QztBQUM3QyxZQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxxREFBcUQsQ0FBQyxDQUFDO0dBQzlFLENBQUMsQ0FBQztBQUNILElBQUUsQ0FBQyxtRUFBbUUsRUFBRSxZQUFNO0FBQzVFLFFBQUksV0FBVyxHQUFHLFVBQVUsQ0FBQztBQUM3QixRQUFJLENBQUMsR0FBRyxhQTlGSCxPQUFPLEVBOEZTLENBQUM7QUFDdEIsS0FBQyxZQUFNO0FBQUUsT0FBQyxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUFFLENBQUEsQ0FBRSxNQUFNLFNBQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztHQUN2RSxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC91cmwtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdzb3VyY2UtbWFwLXN1cHBvcnQnKS5pbnN0YWxsKCk7XG5cbi8qIGdsb2JhbCBkZXNjcmliZTp0cnVlLCBpdDp0cnVlICovXG5cbmltcG9ydCB7IEpXUHJveHkgfSBmcm9tICcuLi8uLic7XG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbi8vaW1wb3J0IFEgZnJvbSAncSc7XG5pbXBvcnQgJ21vY2hhd2FpdCc7XG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdwcm94eWluZyBmdWxsIHVybHMnLCAoKSA9PiB7XG4gIGl0KCdzaG91bGQgdHJhbnNsYXRlIGhvc3QgYW5kIHBvcnQnLCAoKSA9PiB7XG4gICAgbGV0IGluY29taW5nVXJsID0gJ2h0dHA6Ly8xMjcuMC4wLjI6NDcyMy93ZC9odWIvc3RhdHVzJztcbiAgICBsZXQgaiA9IG5ldyBKV1Byb3h5KCk7XG4gICAgbGV0IHByb3h5VXJsID0gai5nZXRVcmxGb3JQcm94eShpbmNvbWluZ1VybCk7XG4gICAgcHJveHlVcmwuc2hvdWxkLmVxdWFsKCdodHRwOi8vbG9jYWxob3N0OjQ0NDQvd2QvaHViL3N0YXR1cycpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCB0cmFuc2xhdGUgdGhlIHNjaGVtZScsICgpID0+IHtcbiAgICBsZXQgaW5jb21pbmdVcmwgPSAnaHR0cDovLzEyNy4wLjAuMjo0NzIzL3dkL2h1Yi9zdGF0dXMnO1xuICAgIGxldCBqID0gbmV3IEpXUHJveHkoe3NjaGVtZTogJ0hUVFBTJ30pO1xuICAgIGxldCBwcm94eVVybCA9IGouZ2V0VXJsRm9yUHJveHkoaW5jb21pbmdVcmwpO1xuICAgIHByb3h5VXJsLnNob3VsZC5lcXVhbCgnaHR0cHM6Ly9sb2NhbGhvc3Q6NDQ0NC93ZC9odWIvc3RhdHVzJyk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHRyYW5zbGF0ZSB0aGUgYmFzZScsICgpID0+IHtcbiAgICBsZXQgaW5jb21pbmdVcmwgPSAnaHR0cDovLzEyNy4wLjAuMjo0NzIzL3dkL2h1Yi9zdGF0dXMnO1xuICAgIGxldCBqID0gbmV3IEpXUHJveHkoe2Jhc2U6ICcnfSk7XG4gICAgbGV0IHByb3h5VXJsID0gai5nZXRVcmxGb3JQcm94eShpbmNvbWluZ1VybCk7XG4gICAgcHJveHlVcmwuc2hvdWxkLmVxdWFsKCdodHRwOi8vbG9jYWxob3N0OjQ0NDQvc3RhdHVzJyk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHRyYW5zbGF0ZSB0aGUgc2Vzc2lvbiBpZCcsICgpID0+IHtcbiAgICBsZXQgaW5jb21pbmdVcmwgPSAnaHR0cDovLzEyNy4wLjAuMjo0NzIzL3dkL2h1Yi9zZXNzaW9uL2Zvb2Jhci9lbGVtZW50JztcbiAgICBsZXQgaiA9IG5ldyBKV1Byb3h5KHtzZXNzaW9uSWQ6ICdiYXJiYXonfSk7XG4gICAgbGV0IHByb3h5VXJsID0gai5nZXRVcmxGb3JQcm94eShpbmNvbWluZ1VybCk7XG4gICAgcHJveHlVcmwuc2hvdWxkLmVxdWFsKCdodHRwOi8vbG9jYWxob3N0OjQ0NDQvd2QvaHViL3Nlc3Npb24vYmFyYmF6L2VsZW1lbnQnKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgZXJyb3Igd2hlbiB0cmFuc2xhdGluZyBzZXNzaW9uIGNvbW1hbmRzIHdpdGhvdXQgc2Vzc2lvbiBpZCcsICgpID0+IHtcbiAgICBsZXQgaW5jb21pbmdVcmwgPSAnaHR0cDovLzEyNy4wLjAuMjo0NzIzL3dkL2h1Yi9zZXNzaW9uL2Zvb2Jhci9lbGVtZW50JztcbiAgICBsZXQgaiA9IG5ldyBKV1Byb3h5KCk7XG4gICAgKCgpID0+IHsgai5nZXRVcmxGb3JQcm94eShpbmNvbWluZ1VybCk7IH0pLnNob3VsZC50aHJvdygnc2Vzc2lvbiBpZCcpO1xuICB9KTtcbn0pO1xuXG5kZXNjcmliZSgncHJveHlpbmcgcGFydGlhbCB1cmxzJywgKCkgPT4ge1xuICBpdCgnc2hvdWxkIHByb3h5IC9zdGF0dXMnLCAoKSA9PiB7XG4gICAgbGV0IGluY29taW5nVXJsID0gJy9zdGF0dXMnO1xuICAgIGxldCBqID0gbmV3IEpXUHJveHkoKTtcbiAgICBsZXQgcHJveHlVcmwgPSBqLmdldFVybEZvclByb3h5KGluY29taW5nVXJsKTtcbiAgICBwcm94eVVybC5zaG91bGQuZXF1YWwoJ2h0dHA6Ly9sb2NhbGhvc3Q6NDQ0NC93ZC9odWIvc3RhdHVzJyk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHByb3h5IC9zZXNzaW9uJywgKCkgPT4ge1xuICAgIGxldCBpbmNvbWluZ1VybCA9ICcvc2Vzc2lvbic7XG4gICAgbGV0IGogPSBuZXcgSldQcm94eSgpO1xuICAgIGxldCBwcm94eVVybCA9IGouZ2V0VXJsRm9yUHJveHkoaW5jb21pbmdVcmwpO1xuICAgIHByb3h5VXJsLnNob3VsZC5lcXVhbCgnaHR0cDovL2xvY2FsaG9zdDo0NDQ0L3dkL2h1Yi9zZXNzaW9uJyk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHByb3h5IC9zZXNzaW9ucycsICgpID0+IHtcbiAgICBsZXQgaW5jb21pbmdVcmwgPSAnL3Nlc3Npb25zJztcbiAgICBsZXQgaiA9IG5ldyBKV1Byb3h5KCk7XG4gICAgbGV0IHByb3h5VXJsID0gai5nZXRVcmxGb3JQcm94eShpbmNvbWluZ1VybCk7XG4gICAgcHJveHlVcmwuc2hvdWxkLmVxdWFsKCdodHRwOi8vbG9jYWxob3N0OjQ0NDQvd2QvaHViL3Nlc3Npb25zJyk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHByb3h5IHNlc3Npb24gY29tbWFuZHMgYmFzZWQgb2ZmIC9zZXNzaW9uJywgKCkgPT4ge1xuICAgIGxldCBpbmNvbWluZ1VybCA9ICcvc2Vzc2lvbi9mb29iYXIvZWxlbWVudCc7XG4gICAgbGV0IGogPSBuZXcgSldQcm94eSh7c2Vzc2lvbklkOiAnYmFyYmF6J30pO1xuICAgIGxldCBwcm94eVVybCA9IGouZ2V0VXJsRm9yUHJveHkoaW5jb21pbmdVcmwpO1xuICAgIHByb3h5VXJsLnNob3VsZC5lcXVhbCgnaHR0cDovL2xvY2FsaG9zdDo0NDQ0L3dkL2h1Yi9zZXNzaW9uL2JhcmJhei9lbGVtZW50Jyk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIGVycm9yIHNlc3Npb24gY29tbWFuZHMgYmFzZWQgb2ZmIC9zZXNzaW9uIHdpdGhvdXQgc2Vzc2lvbiBpZCcsICgpID0+IHtcbiAgICBsZXQgaW5jb21pbmdVcmwgPSAnL3Nlc3Npb24vZm9vYmFyL2VsZW1lbnQnO1xuICAgIGxldCBqID0gbmV3IEpXUHJveHkoKTtcbiAgICAoKCkgPT4geyBqLmdldFVybEZvclByb3h5KGluY29taW5nVXJsKTsgfSkuc2hvdWxkLnRocm93KCdzZXNzaW9uIGlkJyk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHByb3h5IHNlc3Npb24gY29tbWFuZHMgYmFzZWQgb2ZmIC93ZC9odWInLCAoKSA9PiB7XG4gICAgbGV0IGluY29taW5nVXJsID0gJy93ZC9odWIvc2Vzc2lvbi8zZDAwMWRiMi03OTg3LTQyYTctOTc1ZC04ZDVkNTMwNDA4M2YvdGltZW91dHMvaW1wbGljaXRfd2FpdCc7XG4gICAgbGV0IGogPSBuZXcgSldQcm94eSh7c2Vzc2lvbklkOiAnMTIzJ30pO1xuICAgIGxldCBwcm94eVVybCA9IGouZ2V0VXJsRm9yUHJveHkoaW5jb21pbmdVcmwpO1xuICAgIHByb3h5VXJsLnNob3VsZC5lcXVhbCgnaHR0cDovL2xvY2FsaG9zdDo0NDQ0L3dkL2h1Yi9zZXNzaW9uLzEyMy90aW1lb3V0cy9pbXBsaWNpdF93YWl0Jyk7XG5cbiAgfSk7XG4gIGl0KCdzaG91bGQgcHJveHkgc2Vzc2lvbiBjb21tYW5kcyBiYXNlZCBvZmYgL3Nlc3Npb24gYXMgXCJcIicsICgpID0+IHtcbiAgICBsZXQgaW5jb21pbmdVcmwgPSAnJztcbiAgICBsZXQgaiA9IG5ldyBKV1Byb3h5KCk7XG4gICAgKCgpID0+IHsgai5nZXRVcmxGb3JQcm94eShpbmNvbWluZ1VybCk7IH0pLnNob3VsZC50aHJvdygnc2Vzc2lvbiBpZCcpO1xuICAgIGogPSBuZXcgSldQcm94eSh7c2Vzc2lvbklkOiAnMTIzJ30pO1xuICAgIGxldCBwcm94eVVybCA9IGouZ2V0VXJsRm9yUHJveHkoaW5jb21pbmdVcmwpO1xuICAgIHByb3h5VXJsLnNob3VsZC5lcXVhbCgnaHR0cDovL2xvY2FsaG9zdDo0NDQ0L3dkL2h1Yi9zZXNzaW9uLzEyMycpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCBwcm94eSBzZXNzaW9uIGNvbW1hbmRzIHdpdGhvdXQgL3Nlc3Npb24nLCAoKSA9PiB7XG4gICAgbGV0IGluY29taW5nVXJsID0gJy9lbGVtZW50JztcbiAgICBsZXQgaiA9IG5ldyBKV1Byb3h5KHtzZXNzaW9uSWQ6ICdiYXJiYXonfSk7XG4gICAgbGV0IHByb3h5VXJsID0gai5nZXRVcmxGb3JQcm94eShpbmNvbWluZ1VybCk7XG4gICAgcHJveHlVcmwuc2hvdWxkLmVxdWFsKCdodHRwOi8vbG9jYWxob3N0OjQ0NDQvd2QvaHViL3Nlc3Npb24vYmFyYmF6L2VsZW1lbnQnKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgZXJyb3Igc2Vzc2lvbiBjb21tYW5kcyB3aXRob3V0IC9zZXNzaW9uIHdpdGhvdXQgc2Vzc2lvbiBpZCcsICgpID0+IHtcbiAgICBsZXQgaW5jb21pbmdVcmwgPSAnL2VsZW1lbnQnO1xuICAgIGxldCBqID0gbmV3IEpXUHJveHkoKTtcbiAgICAoKCkgPT4geyBqLmdldFVybEZvclByb3h5KGluY29taW5nVXJsKTsgfSkuc2hvdWxkLnRocm93KCdzZXNzaW9uIGlkJyk7XG4gIH0pO1xufSk7XG4iXX0=