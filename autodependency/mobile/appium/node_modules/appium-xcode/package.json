{
  "name": "appium-xcode",
  "description": "Description goes here.",
  "keywords": [
    "appium"
  ],
  "version": "2.0.4",
  "author": {
    "name": "appium"
  },
  "license": "Apache License 2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/appium/appium-xcode.git"
  },
  "bugs": {
    "url": "https://github.com/appium/appium-xcode/issues"
  },
  "engines": [
    "node"
  ],
  "main": "./build/lib/xcode.js",
  "bin": {},
  "directories": {
    "lib": "lib"
  },
  "dependencies": {
    "appium-support": "^1.0.0",
    "asyncbox": "^2.0.2",
    "babel-runtime": "^5.0.12",
    "denodeify": "^1.2.1",
    "lodash": "^3.6.0",
    "npmlog": "^1.2.0",
    "plist": "^1.1.0",
    "q": "^1.2.0",
    "source-map-support": "^0.2.10"
  },
  "scripts": {
    "prepublish": "gulp prepublish",
    "test": "gulp once",
    "watch": "gulp"
  },
  "devDependencies": {
    "appium-gulp-plugins": "^1.0.3",
    "chai": "^2.2.0",
    "chai-as-promised": "^4.3.0",
    "gulp": "^3.8.10",
    "mochawait": "^2.0.0"
  },
  "readme": "appium-xcode\n===================\n\nES7 module for interacting with Xcode and Xcode-related functions.\nUsed by [Appium](github.com/appium/appium)\n\nAPI\n===\n\nAll functions are `async`, meaning they return promises which can be awaited via `await`.\n\nMost functions are memoized, so after they are called once, they will simply return the same value. Remember that calling `require()` multiple times returns the same instantiation of a module if it has already been instantiated, so the memoization will be preserved across multiple files in the same project.\n\nSome functions have an auto-retry built into them, they will retry silently a number of times. This is because the Xcode commands sometimes just flake and return bad values (or don't return).\n\nTo clear the memoized values, call `clearInternalCache`\n\n### getPath()\n*memoized*\n\ngets path to Xcode\n\n### getVersion([num_retries])\n*memoized*, *retry*\n\nreturns the version of Xcode. Returns strings like `'6.3.1'`\n\n### getAutomationTraceTemplatePath([num_retries])\n*memoized, *retry*\n\nreturns a path to the default AutomationTraceTemplate\n\n### getAutomationTraceTemplatePathWithoutRetry()\n\nsame as `getAutomationTraceTemplatePath()` but without retry or memoization.\n\n### getMaxIOSSDK([num_retries])\n*memoized*, *retry*\n\nreturns largest IOS SDK version supported by Xcode.\neg: `'8.3'`\n\n### getMaxIOSSDKWithoutRetry()\n\nsame as `getMaxIOSDK()` but without retry or memoization\n\n### clearInternalCache()\nclears the internal cache used for memoizing functions.\n\nDevelop\n=======\n\n## Watch\n\n```\nnpm run watch\n```\n\n## Test\n\n```\nnpm test\n```\n\nDebug\n=====\n\nAfter cloning appium-xcode, execute `npm link` in the appium-xcode directory. Next run `npm link appium-xcode` from the appium directory. This will symlink appium-xcode to node_modules/appium-xcode. If the clone becomes out of date remember to unlink or delete node_modules and reinstall.\n\nFor quick debugging you could cd into the node_modules/appium-xcode folder and run `npm install` followed by `gulp transpile`.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/appium/appium-xcode",
  "_id": "appium-xcode@2.0.4",
  "dist": {
    "shasum": "551bef6c3a92f8bccdeee12a4844dedbffb82ac1"
  },
  "_from": "appium-xcode@=2.0.4",
  "_resolved": "https://registry.npmjs.org/appium-xcode/-/appium-xcode-2.0.4.tgz"
}
